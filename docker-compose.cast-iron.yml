version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "2181"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure

  # Message Queues
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "postgres:1:1,minio:1:1,pizza-tracker:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure

  # Object Storage
  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: castiron
      MINIO_SECRET_KEY: castiron
      MINIO_NOTIFY_KAFKA_BROKERS_docker: kafka:9092
      MINIO_NOTIFY_KAFKA_ENABLE_docker: 'on'
      MINIO_NOTIFY_KAFKA_TOPIC_docker: minio
    entrypoint: /usr/bin/docker-entrypoint.sh server /data
    ports:
      - "9000:9000"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      start_period: 120s
      retries: 3
    restart: always

  # Workers
  worker:
    image: ghcr.io/black-cape/cast-iron/worker:latest
    environment:
      KAFKA_BROKER: kafka:9092
      MINIO_HOST: minio:9000
    depends_on:
      - kafka
      - minio
    restart: always
